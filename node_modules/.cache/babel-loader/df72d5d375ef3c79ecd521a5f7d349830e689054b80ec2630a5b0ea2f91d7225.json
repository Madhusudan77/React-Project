{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React Practice/textutils/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    console.log(\"On change\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter text here');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpClick,\n        className: \"btn btn-primary\",\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your text summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [text.split(' ').length, \" words and \", text.length, \" characters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TextForm, \"3SkFjrn2ucpyzrB0FJHiV9CSQT4=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","console","log","text","newText","toUpperCase","setText","handleOnChange","event","target","value","heading","split","length"],"sources":["/var/www/html/React Practice/textutils/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n\n    const handleUpClick = () => {\n        console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText)\n\n    }\n    \n    const handleOnChange = (event) => {\n        console.log(\"On change\");\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState('Enter text here');\n\n    return (\n        <>\n            <div className='container'>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button onClick={handleUpClick} className=\"btn btn-primary\">Convert to Uppercase</button>\n            </div>\n            <div className=\"container my-3\">\n                <h1>Your text summary</h1>\n                <p>{text.split(' ').length} words and {text.length} characters</p>\n            </div>\n        </>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAErC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAEpC,MAAMC,aAAa,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGC,IAAI,CAAC;IAC3C,IAAIC,OAAO,GAAGD,IAAI,CAACE,WAAW,EAAE;IAChCC,OAAO,CAACF,OAAO,CAAC;EAEpB,CAAC;EAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAC9BP,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAM,CAACP,IAAI,EAAEG,OAAO,CAAC,GAAGT,QAAQ,CAAC,iBAAiB,CAAC;EAEnD,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,WAAW;MAAA,wBACtB;QAAA,UAAKE,KAAK,CAACY;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACxB;QAAK,SAAS,EAAC,MAAM;QAAA,uBACjB;UAAU,SAAS,EAAC,cAAc;UAAC,KAAK,EAAER,IAAK;UAAC,QAAQ,EAAEI,cAAe;UAAC,EAAE,EAAC,OAAO;UAAC,IAAI,EAAC;QAAG;UAAA;UAAA;UAAA;QAAA;MAAY;QAAA;QAAA;QAAA;MAAA,QACvG,eACN;QAAQ,OAAO,EAAEP,aAAc;QAAC,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACvF,eACN;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC3B;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAA,WAAIG,IAAI,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,aAAW,EAACV,IAAI,CAACU,MAAM,EAAC,aAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAChE;EAAA,gBACP;AAEX;AAAC,GA/BuBf,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}