{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React Practice/textutils/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const handleOnChange = event => {\n    console.log(\"On change\");\n    setText(event.target.value);\n  };\n  const handleCount = event => {\n    console.log(\"On Change\");\n    setCount(event.target.value);\n  };\n  const numAdd = () => {\n    let newNum = Number(count);\n    newNum = newNum + 1;\n    setCount(newNum);\n  };\n  const [text, setText] = useState('Enter text here');\n  const [count, setCount] = useState(2);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: count,\n          onChange: handleCount,\n          name: \"numOut\",\n          id: \"myNum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: numAdd,\n          className: \"btn btn-primary\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpClick,\n        className: \"btn btn-primary\",\n        children: \"Convert to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"0R+LnL4Una9FOjv2QXeRh3d77uw=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","console","log","text","newText","toUpperCase","setText","handleOnChange","event","target","value","handleCount","setCount","numAdd","newNum","Number","count","heading"],"sources":["/var/www/html/React Practice/textutils/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n\n    const handleUpClick = () => {\n        console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText)\n\n    }\n    \n    const handleOnChange = (event) => {\n        console.log(\"On change\");\n        setText(event.target.value);\n    }\n    const handleCount = (event) => {\n        console.log(\"On Change\");\n        setCount(event.target.value);\n    }\n    const numAdd = () => {\n        let newNum = Number(count);\n        newNum = newNum + 1;\n        setCount(newNum)\n    }\n\n    const [text, setText] = useState('Enter text here');\n    const [count, setCount] = useState(2);\n\n    return (\n        <>\n            <div>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">\n                    <input type=\"number\" value={count} onChange={handleCount} name=\"numOut\" id=\"myNum\" />\n                    <button onClick={numAdd} className=\"btn btn-primary\">Add</button>\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button onClick={handleUpClick} className=\"btn btn-primary\">Convert to Uppercase</button>\n            </div>\n        </>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAErC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAEpC,MAAMC,aAAa,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGC,IAAI,CAAC;IAC3C,IAAIC,OAAO,GAAGD,IAAI,CAACE,WAAW,EAAE;IAChCC,OAAO,CAACF,OAAO,CAAC;EAEpB,CAAC;EAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAC9BP,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBI,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EACD,MAAMC,WAAW,GAAIH,KAAK,IAAK;IAC3BP,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBU,QAAQ,CAACJ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD,MAAMG,MAAM,GAAG,MAAM;IACjB,IAAIC,MAAM,GAAGC,MAAM,CAACC,KAAK,CAAC;IAC1BF,MAAM,GAAGA,MAAM,GAAG,CAAC;IACnBF,QAAQ,CAACE,MAAM,CAAC;EACpB,CAAC;EAED,MAAM,CAACX,IAAI,EAAEG,OAAO,CAAC,GAAGT,QAAQ,CAAC,iBAAiB,CAAC;EACnD,MAAM,CAACmB,KAAK,EAAEJ,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA,UAAKE,KAAK,CAACkB;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,eACxB;QAAK,SAAS,EAAC,MAAM;QAAA,wBACjB;UAAO,IAAI,EAAC,QAAQ;UAAC,KAAK,EAAED,KAAM;UAAC,QAAQ,EAAEL,WAAY;UAAC,IAAI,EAAC,QAAQ;UAAC,EAAE,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAG,eACrF;UAAQ,OAAO,EAAEE,MAAO;UAAC,SAAS,EAAC,iBAAiB;UAAA,UAAC;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS,eACjE;UAAU,SAAS,EAAC,cAAc;UAAC,KAAK,EAAEV,IAAK;UAAC,QAAQ,EAAEI,cAAe;UAAC,EAAE,EAAC,OAAO;UAAC,IAAI,EAAC;QAAG;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QACvG,eACN;QAAQ,OAAO,EAAEP,aAAc;QAAC,SAAS,EAAC,iBAAiB;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACvF,iBACP;AAEX;AAAC,GAvCuBF,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}