{"ast":null,"code":"var _jsxFileName = \"/var/www/html/React Practice/textutils/src/components/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const handleUpClick = () => {\n    console.log(\"Uppercase was clicked\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n  const counterAdd = () => {\n    let counter = count + 1;\n    setCount(counter);\n  };\n  const handleOnChange = event => {\n    console.log(\"On change\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState('Enter text here');\n  const [count, setCount] = useState(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form-control\",\n        value: text,\n        onChange: handleOnChange,\n        id: \"myBox\",\n        rows: \"8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpClick,\n      className: \"btn btn-primary\",\n      children: \"Convert to Uppercase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: counterAdd,\n      className: \"btn btn-primary\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(TextForm, \"0R+LnL4Una9FOjv2QXeRh3d77uw=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","TextForm","props","handleUpClick","console","log","text","newText","toUpperCase","setText","counterAdd","counter","count","setCount","handleOnChange","event","target","value","heading"],"sources":["/var/www/html/React Practice/textutils/src/components/TextForm.js"],"sourcesContent":["import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n\n    const handleUpClick = () => {\n        console.log(\"Uppercase was clicked\" + text);\n        let newText = text.toUpperCase();\n        setText(newText)\n\n    }\n    const counterAdd = () => {\n        let counter = count+1;\n        setCount(counter)\n    }\n    \n    const handleOnChange = (event) => {\n        console.log(\"On change\");\n        setText(event.target.value);\n    }\n\n    const [text, setText] = useState('Enter text here');\n    const [count, setCount] = useState(2);\n\n    return (\n        <div>\n            <h1>{props.heading}</h1>\n            <div className=\"mb-3\">\n                <input type=\"number\" value={count} />\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\n            </div>\n            <button onClick={handleUpClick} className=\"btn btn-primary\">Convert to Uppercase</button>\n            <button onClick={counterAdd} className=\"btn btn-primary\">Add</button>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAErC,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAEpC,MAAMC,aAAa,GAAG,MAAM;IACxBC,OAAO,CAACC,GAAG,CAAC,uBAAuB,GAAGC,IAAI,CAAC;IAC3C,IAAIC,OAAO,GAAGD,IAAI,CAACE,WAAW,EAAE;IAChCC,OAAO,CAACF,OAAO,CAAC;EAEpB,CAAC;EACD,MAAMG,UAAU,GAAG,MAAM;IACrB,IAAIC,OAAO,GAAGC,KAAK,GAAC,CAAC;IACrBC,QAAQ,CAACF,OAAO,CAAC;EACrB,CAAC;EAED,MAAMG,cAAc,GAAIC,KAAK,IAAK;IAC9BX,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBI,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAM,CAACX,IAAI,EAAEG,OAAO,CAAC,GAAGT,QAAQ,CAAC,iBAAiB,CAAC;EACnD,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACI;IAAA,wBACI;MAAA,UAAKE,KAAK,CAACgB;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eACxB;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAEN;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC;QAAU,SAAS,EAAC,cAAc;QAAC,KAAK,EAAEN,IAAK;QAAC,QAAQ,EAAEQ,cAAe;QAAC,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACvG,eACN;MAAQ,OAAO,EAAEX,aAAc;MAAC,SAAS,EAAC,iBAAiB;MAAA,UAAC;IAAoB;MAAA;MAAA;MAAA;IAAA,QAAS,eACzF;MAAQ,OAAO,EAAEO,UAAW;MAAC,SAAS,EAAC,iBAAiB;MAAA,UAAC;IAAG;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACnE;AAEd;AAAC,GAhCuBT,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}